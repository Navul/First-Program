glPushMatrix(): Saves the current transformation matrix state to the stack. This allows you to apply transformations and later revert to this saved state using glPopMatrix().



glTranslatef(2.0, 0.0, 0.0): Translates (moves) the coordinate system 2 units to the right (along the x-axis). This transformation will affect all subsequent drawing commands.



glColor3f(1.0, 0.0, 0.0): Sets the current color to red.



draw_square(): Draws a square at the new position (translated 2 units to the right).



glRotatef(45, 0.0, 0.0, 1.0): Rotates the coordinate system 45 degrees around the z-axis. This transformation will affect all subsequent drawing commands.



glColor3f(0.0, 1.0, 0.0): Sets the current color to green.



draw_square(): Draws a square at the current position, which is translated 2 units to the right and rotated 45 degrees.



glTranslatef(2.0, 0.0, 0.0): Translates the coordinate system another 2 units to the right. This transformation will affect all subsequent drawing commands.



glColor3f(0.0, 0.0, 1.0): Sets the current color to blue.



draw_square(): Draws a square at the new position, which is now translated 4 units to the right and rotated 45 degrees.



glRotatef(45, 0.0, 0.0, 1.0): Rotates the coordinate system another 45 degrees around the z-axis. This transformation will affect all subsequent drawing commands.



glColor3f(1.0, 1.0, 0.0): Sets the current color to yellow.



draw_square(): Draws a square at the current position, which is translated 4 units to the right and rotated 90 degrees in total.



glTranslatef(2.0, 0.0, 0.0): Translates the coordinate system another 2 units to the right. This transformation will affect all subsequent drawing commands.



glColor3f(1.0, 0.0, 1.0): Sets the current color to purple.



draw_square(): Draws a square at the new position, which is translated 6 units to the right and rotated 90 degrees in total.



glPopMatrix(): Restores the matrix state to what it was before the glPushMatrix(). This undoes all the transformations applied since the glPushMatrix().

You can only use the above 17 OpenGL functions and the functions that are available in 3D_OpenGl_Intro.py file. Only these 35 functions can be used no other than that.